setwd("D:/OnlineDrive/OneDrive/Study/21.2019 Spring/Macro Econometrics/Class Codes/0313/R_Scripts_for_VAR_Models") # Set my working directory
library(vars)
install.packages("vars")
setwd("D:/OnlineDrive/OneDrive/Study/21.2019 Spring/Macro Econometrics/Class Codes/0313/R_Scripts_for_VAR_Models") # Set my working directory
library(vars)
# example Stock and Watson (2001)
data=read.table("SWdata.txt",sep="",header=TRUE)
# get time series
fedfr=data$ffrate[21:184]
inflr=400*(log(data$gdpd[21:184])-log(data$gdpd[20:183]))
unemr=data$urate[21:184]
gdpd=log(data$gdpd[21:184])#log-level of gdp deflator
# full sample
vardata0=ts(cbind(inflr,unemr,fedfr),start=1960,frequency=4)
# plot processes
layout(1)
plot(vardata0,type="l",col="blue",main="Stock and Watson (2001) Data")
# find optimal number of lags
info.crit=VARselect(vardata0,lag.max=8,type="const")
info.crit
# estimate VAR(2)
model0=VAR(vardata0,p=2,type="const")
model1=VAR(vardata0,ic="SC",type="const")
summary(model0)
summary(model1)
roots(model0)
info.crit
# get roots (modulus)
roots(model0)
var2.serial=serial.test(model0,lags.pt=16,type="PT.adjusted")
var2.serial
var2.serial=serial.test(model0,lags.pt=5,type="PT.adjusted")
var2.serial
# test for Granger causality
causality(model0,cause=c("inflr","unemr"))$Granger
#null hypo H0: inflr unemr do not Granger-cause fedfr
causality(model0,cause=c("inflr"))$Granger
# get IRF (impulse responses)
###Impact of shock to inflation
irf.inflr=irf(model0,impulse="inflr",n.ahead=24,ci=.9) #impact of shocks to inflation
plot(irf.inflr)
irf.unemr=irf(model0,impulse="unemr",n.ahead=24,ci=.9)
plot(irf.unemr)
irf.fedfr=irf(model0,impulse="fedfr",n.ahead=24,ci=.9)
plot(irf.fedfr)
# compute FEVD (forecast error decomposition)
fevd.var=fevd(model0,n.ahead=16)
plot(fevd.var)
fevd.var=fevd(model0,n.ahead=16)
plot(fevd.var)
##VAR MODELS WITH EXCESS BOND PREMIUM, GZ SPREAD AND HOUSE PRICE GROWTH
setwd("D:/OnlineDrive/OneDrive/Study/21.2019 Spring/Macro Econometrics/Class Codes/0313/R_Scripts_for_VAR_Models") # Set my working directory
rm(list=ls())
library(forecast)
library(vars)
library(tseries)
library(dynlm)
#!this let you estimate var model with assymetry
library(zoo)
library(dyn)
###VAR MODEL ESTIMATION AND FORECASTING (Jobs grrowth, senior loan officer survey
###and spread data.
gdp.growth=read.csv("drgdp_rt.csv",header=TRUE) # real time gdp date
y=read.csv("drgdp_var.csv",header=TRUE) #actual gdp
y2=read.csv("drhpi.csv",header=TRUE) # houseprice growth
y3=read.table("gz_ebpq_3.txt",header=FALSE)
drgdp_spf=read.csv("drgdp_spf.csv",header=TRUE)
y=na.omit(y)
gdp.growth=na.omit(gdp.growth)
gdp.growth=gdp.growth
slo=y[,3]# LOAN OFFICER SURVEY ON FINANCING EASE
drhpi=y[,4] ##REAL HOUSE PRICE GROWTH
gz_spr=y3[,1] ##GZ SPREAD
ebp=y3[,2]  ##EXCESS BOND PREMIUM
#####################
gdp.growth.true=y[,2]
##Recursive forecasting for real-time real GDP Growth
#Comparing forecasts for different VAR models
#Initial sample estimation 1985:Q1-1994:Q3 (sample size=39)
#forecast sample 1994:Q4-2017:Q3
n.end=39 #Initial sample estimation
t=131 #Full Sample size
n=t-n.end-3 #Forecast sample
# set matrix for storage
pred_var21=matrix(rep(0,4*n),n,4)
pred_var22=matrix(rep(0,4*n),n,4)
pred_var23=matrix(rep(0,4*n),n,4)
pred_var24=matrix(rep(0,4*n),n,4)
pred_var31=matrix(rep(0,4*n),n,4)
pred_var32=matrix(rep(0,4*n),n,4)
pred_var33=matrix(rep(0,4*n),n,4)
pred_ar=matrix(rep(0,4*n),n,4)
##LIBRARIES vars AND urca####
setwd("D:/OnlineDrive/OneDrive/Study/21.2019 Spring/Macro Econometrics/Class Codes/0327") # Set my working directory
library(vars)
library(urca)
#########VAR AND UNIT ROOT TESTS######
##LIBRARIES vars AND urca####
setwd("D:/OnlineDrive/OneDrive/Study/21.2019 Spring/Macro Econometrics/Class Codes/0327") # Set my working directory
library(vars)
library(urca)
# example Stock and Watson (2001)
data=read.table("SWdata.txt",sep="",header=TRUE)
